<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="true"/>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 
  <arg name="model"     default="$(find itri_robot_gazebo)/urdf/wallworld.urdf.xacro"/>

  <arg name="initial_pose_x" value="0.0"/>
  <arg name="initial_pose_y" value="0.0"/>
  <arg name="initial_pose_z" value="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <param name="/use_sim_time" value="$(arg use_sim_time)" />
  <!-- <param name="map_description" command="$(find xacro)/xacro.py $(arg model)" /> -->
  <!-- <param name="map_description" textfile="/home/lui/building_editor_models/itri_lab_wall/model.sdf"/>

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model wall -param map_description" respawn="false" output="screen" /> -->

  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include> -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find itri_robot_gazebo)/worlds/itri_lab.world"/>
    <!-- <arg name="world_name" value="$(find itri_robot_gazebo)/worlds/itri_lab_with_pedestrian.world"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

    <!-- OPEN One_robot launch-->
  <include file="$(find itri_robot_gazebo)/launch/one_robot.launch" >
    <arg name="robot_name" value="itri-agv"/>
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="init_pose" value="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_z)" />
  </include>
  
  <!-- JOY Stick -->
  <include file="$(find teleop_twist_joy)/launch/teleop.launch" />
  
  <!-- Laser Scan Matcher -->
  <node name="laser_scan_matcher" pkg="laser_scan_matcher" type="laser_scan_matcher_node" >
    <param name="fixed_frame" value="odom" />
    <param name="base_frame" value="base_footprint" />
    <param name="use_imu" value="true" />
    <param name="use_odom" value="true" />
    <param name="use_vel" value="true" />
    <param name="publish_tf" value="true"/>
    <param name="publish_pose" value="true"/>
  </node>

  <!-- Map server -->
  <arg name="map_file" default="/home/lui/map_r1.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find kobuki_navigation)/launch/includes/amcl_for_laser.launch.xml"/>

  <include file="$(arg custom_amcl_launch_file)">
      <arg name="robot_name"     value="itri-agv" />
      <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
      <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
      <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <!-- Move base -->
  <arg name="custom_param_file" default="$(find kobuki_navigation)/param/costmap_common_params.yaml"/>
  <include file="$(find kobuki_navigation)/launch/includes/move_base_for_laser.launch.xml">
      <arg name="robot_name"     value="itri-agv" />
      <arg name="custom_param_file" value="$(arg custom_param_file)"/>
      <arg name="global_frame_id"   value="map" />
  </include>

  <!-- Navigation-->
  <!--include file="$(find kobuki_navigation)/launch/kb_laser_scan_matcher_navigation.launch" /-->
</launch>
